{
  "name": "groq",
  "version": "14.0.0",
  "title": "Groq",
  "description": "Gain access to Groq models for content generation, chat responses, and audio transcription.",
  "events": {},
  "actions": {
    "generateContent": {
      "input": {
        "schema": {
          "type": "object",
          "properties": {
            "model": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "enum": [
                    "openai/gpt-oss-20b",
                    "openai/gpt-oss-120b",
                    "deepseek-r1-distill-llama-70b",
                    "llama-3.3-70b-versatile",
                    "llama-3.2-1b-preview",
                    "llama-3.2-3b-preview",
                    "llama-3.2-11b-vision-preview",
                    "llama-3.2-90b-vision-preview",
                    "llama-3.1-8b-instant",
                    "llama3-8b-8192",
                    "llama3-70b-8192",
                    "gemma2-9b-it"
                  ],
                  "description": "Model to use for content generation",
                  "x-zui": {
                    "placeholder": "mixtral-8x7b-32768"
                  }
                }
              },
              "required": [
                "id"
              ],
              "additionalProperties": false,
              "x-zui": {}
            },
            "reasoningEffort": {
              "type": "string",
              "enum": [
                "low",
                "medium",
                "high",
                "dynamic",
                "none"
              ],
              "description": "Reasoning effort level to use for models that support reasoning. Specifying \"none\" will indicate the LLM to not use reasoning (for models that support optional reasoning). A \"dynamic\" effort will indicate the provider to automatically determine the reasoning effort (if supported by the provider). If not provided the model will not use reasoning for models with optional reasoning or use the default reasoning effort specified by the provider for reasoning-only models.
Note: A higher reasoning effort will incur in higher output token charges from the LLM provider.",
              "x-zui": {}
            },
            "systemPrompt": {
              "type": "string",
              "description": "Optional system prompt to guide the model",
              "x-zui": {}
            },
            "messages": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": [
                      "user",
                      "assistant"
                    ],
                    "x-zui": {}
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "text",
                      "tool_calls",
                      "tool_result",
                      "multipart"
                    ],
                    "x-zui": {},
                    "default": "text"
                  },
                  "toolCalls": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "x-zui": {}
                        },
                        "type": {
                          "type": "string",
                          "const": "function",
                          "x-zui": {}
                        },
                        "function": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "x-zui": {}
                            },
                            "arguments": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "x-zui": {}
                                  },
                                  "description": "Some LLMs may generate invalid JSON for a tool call, so this will be `null` when it happens.",
                                  "x-zui": {}
                                },
                                {
                                  "type": "null",
                                  "x-zui": {}
                                }
                              ],
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "name",
                            "arguments"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "function"
                      ],
                      "additionalProperties": false,
                      "x-zui": {}
                    },
                    "description": "Required if `type` is \"tool_calls\"",
                    "x-zui": {}
                  },
                  "toolResultCallId": {
                    "type": "string",
                    "description": "Required if `type` is \"tool_result\"",
                    "x-zui": {}
                  },
                  "content": {
                    "anyOf": [
                      {
                        "anyOf": [
                          {
                            "type": "string",
                            "x-zui": {}
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "text",
                                    "image"
                                  ],
                                  "x-zui": {}
                                },
                                "mimeType": {
                                  "type": "string",
                                  "description": "Indicates the MIME type of the content. If not provided it will be detected from the content-type header of the provided URL.",
                                  "x-zui": {}
                                },
                                "text": {
                                  "type": "string",
                                  "description": "Required if part type is \"text\" ",
                                  "x-zui": {}
                                },
                                "url": {
                                  "type": "string",
                                  "description": "Required if part type is \"image\"",
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            },
                            "x-zui": {}
                          }
                        ],
                        "description": "Required unless `type` is \"tool_call\". If `type` is \"multipart\", this field must be an array of content objects. If `type` is \"tool_result\" then this field should be the result of the tool call (a plain string or a JSON-encoded array or object). If `type` is \"tool_call\" then the `toolCalls` field should be used instead.",
                        "x-zui": {}
                      },
                      {
                        "type": "null",
                        "x-zui": {}
                      }
                    ],
                    "x-zui": {}
                  }
                },
                "required": [
                  "role",
                  "content"
                ],
                "additionalProperties": false,
                "x-zui": {}
              },
              "description": "Array of messages for the model to process",
              "x-zui": {}
            },
            "responseFormat": {
              "type": "string",
              "enum": [
                "text",
                "json_object"
              ],
              "description": "Response format expected from the model. If \"json_object\" is chosen, you must instruct the model to generate JSON either via the system prompt or a user message.",
              "x-zui": {}
            },
            "maxTokens": {
              "type": "number",
              "description": "Maximum number of tokens allowed in the generated response",
              "x-zui": {}
            },
            "temperature": {
              "type": "number",
              "minimum": 0,
              "maximum": 2,
              "description": "Sampling temperature for the model. Higher values result in more random outputs.",
              "x-zui": {
                "displayAs": [
                  "slider",
                  {
                    "stepSize": 0.01,
                    "horizontal": true
                  }
                ]
              },
              "default": 1
            },
            "topP": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "Top-p sampling parameter. Limits sampling to the smallest set of tokens with a cumulative probability above the threshold.",
              "x-zui": {
                "displayAs": [
                  "slider",
                  {
                    "stepSize": 0.01,
                    "horizontal": true
                  }
                ]
              },
              "default": 1
            },
            "stopSequences": {
              "type": "array",
              "items": {
                "type": "string",
                "x-zui": {}
              },
              "maxItems": 4,
              "description": "Sequences where the model should stop generating further tokens.",
              "x-zui": {}
            },
            "tools": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "const": "function",
                    "x-zui": {}
                  },
                  "function": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Function name",
                        "x-zui": {}
                      },
                      "description": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "argumentsSchema": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false,
                        "description": "JSON schema of the function arguments",
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  }
                },
                "required": [
                  "type",
                  "function"
                ],
                "additionalProperties": false,
                "x-zui": {}
              },
              "x-zui": {}
            },
            "toolChoice": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "auto",
                    "specific",
                    "any",
                    "none",
                    ""
                  ],
                  "x-zui": {}
                },
                "functionName": {
                  "type": "string",
                  "description": "Required if `type` is \"specific\"",
                  "x-zui": {}
                }
              },
              "additionalProperties": false,
              "x-zui": {}
            },
            "userId": {
              "type": "string",
              "x-zui": {}
            },
            "debug": {
              "type": "boolean",
              "description": "Set to `true` to output debug information to the bot logs",
              "x-zui": {
                "hidden": true
              }
            },
            "meta": {
              "type": "object",
              "properties": {
                "promptSource": {
                  "type": "string",
                  "description": "Source of the prompt, e.g. agent/:id/:version cards/ai-generate, cards/ai-task, nodes/autonomous, etc.",
                  "x-zui": {}
                },
                "promptCategory": {
                  "type": "string",
                  "x-zui": {}
                },
                "integrationName": {
                  "type": "string",
                  "description": "Name of the integration that originally received the message that initiated this action",
                  "x-zui": {}
                }
              },
              "additionalProperties": false,
              "x-zui": {
                "hidden": true
              }
            }
          },
          "required": [
            "messages"
          ],
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "output": {
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Response ID from LLM provider",
              "x-zui": {}
            },
            "provider": {
              "type": "string",
              "description": "LLM provider name",
              "x-zui": {}
            },
            "model": {
              "type": "string",
              "description": "Model name",
              "x-zui": {}
            },
            "choices": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "text",
                      "tool_calls",
                      "tool_result",
                      "multipart"
                    ],
                    "x-zui": {},
                    "default": "text"
                  },
                  "toolCalls": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "x-zui": {}
                        },
                        "type": {
                          "type": "string",
                          "const": "function",
                          "x-zui": {}
                        },
                        "function": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "x-zui": {}
                            },
                            "arguments": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "x-zui": {}
                                  },
                                  "description": "Some LLMs may generate invalid JSON for a tool call, so this will be `null` when it happens.",
                                  "x-zui": {}
                                },
                                {
                                  "type": "null",
                                  "x-zui": {}
                                }
                              ],
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "name",
                            "arguments"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "function"
                      ],
                      "additionalProperties": false,
                      "x-zui": {}
                    },
                    "description": "Required if `type` is \"tool_calls\"",
                    "x-zui": {}
                  },
                  "toolResultCallId": {
                    "type": "string",
                    "description": "Required if `type` is \"tool_result\"",
                    "x-zui": {}
                  },
                  "content": {
                    "anyOf": [
                      {
                        "anyOf": [
                          {
                            "type": "string",
                            "x-zui": {}
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "text",
                                    "image"
                                  ],
                                  "x-zui": {}
                                },
                                "mimeType": {
                                  "type": "string",
                                  "description": "Indicates the MIME type of the content. If not provided it will be detected from the content-type header of the provided URL.",
                                  "x-zui": {}
                                },
                                "text": {
                                  "type": "string",
                                  "description": "Required if part type is \"text\" ",
                                  "x-zui": {}
                                },
                                "url": {
                                  "type": "string",
                                  "description": "Required if part type is \"image\"",
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            },
                            "x-zui": {}
                          }
                        ],
                        "description": "Required unless `type` is \"tool_call\". If `type` is \"multipart\", this field must be an array of content objects. If `type` is \"tool_result\" then this field should be the result of the tool call (a plain string or a JSON-encoded array or object). If `type` is \"tool_call\" then the `toolCalls` field should be used instead.",
                        "x-zui": {}
                      },
                      {
                        "type": "null",
                        "x-zui": {}
                      }
                    ],
                    "x-zui": {}
                  },
                  "role": {
                    "type": "string",
                    "const": "assistant",
                    "x-zui": {}
                  },
                  "index": {
                    "type": "integer",
                    "x-zui": {}
                  },
                  "stopReason": {
                    "type": "string",
                    "enum": [
                      "stop",
                      "max_tokens",
                      "tool_calls",
                      "content_filter",
                      "other"
                    ],
                    "x-zui": {}
                  }
                },
                "required": [
                  "content",
                  "role",
                  "index",
                  "stopReason"
                ],
                "additionalProperties": false,
                "x-zui": {}
              },
              "x-zui": {}
            },
            "usage": {
              "type": "object",
              "properties": {
                "inputTokens": {
                  "type": "integer",
                  "description": "Number of input tokens used by the model",
                  "x-zui": {}
                },
                "inputCost": {
                  "type": "number",
                  "description": "Cost of the input tokens received by the model, in U.S. dollars",
                  "x-zui": {}
                },
                "outputTokens": {
                  "type": "integer",
                  "description": "Number of output tokens used by the model",
                  "x-zui": {}
                },
                "outputCost": {
                  "type": "number",
                  "description": "Cost of the output tokens generated by the model, in U.S. dollars",
                  "x-zui": {}
                }
              },
              "required": [
                "inputTokens",
                "inputCost",
                "outputTokens",
                "outputCost"
              ],
              "additionalProperties": false,
              "x-zui": {}
            },
            "botpress": {
              "type": "object",
              "properties": {
                "cost": {
                  "type": "number",
                  "description": "Total cost of the content generation, in U.S. dollars",
                  "x-zui": {}
                }
              },
              "required": [
                "cost"
              ],
              "additionalProperties": false,
              "x-zui": {}
            }
          },
          "required": [
            "id",
            "provider",
            "model",
            "choices",
            "usage",
            "botpress"
          ],
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "billable": true,
      "cacheable": true
    },
    "listLanguageModels": {
      "input": {
        "schema": {
          "type": "object",
          "properties": {},
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "output": {
        "schema": {
          "type": "object",
          "properties": {
            "models": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "name": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "description": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "recommended",
                            "deprecated",
                            "general-purpose",
                            "low-cost",
                            "vision",
                            "coding",
                            "agents",
                            "function-calling",
                            "roleplay",
                            "storytelling",
                            "reasoning",
                            "preview"
                          ],
                          "x-zui": {}
                        },
                        "x-zui": {}
                      },
                      "input": {
                        "type": "object",
                        "properties": {
                          "maxTokens": {
                            "type": "integer",
                            "x-zui": {}
                          },
                          "costPer1MTokens": {
                            "type": "number",
                            "description": "Cost per 1 million tokens, in U.S. dollars",
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "maxTokens",
                          "costPer1MTokens"
                        ],
                        "additionalProperties": false,
                        "x-zui": {}
                      },
                      "output": {
                        "type": "object",
                        "properties": {
                          "maxTokens": {
                            "type": "integer",
                            "x-zui": {}
                          },
                          "costPer1MTokens": {
                            "type": "number",
                            "description": "Cost per 1 million tokens, in U.S. dollars",
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "maxTokens",
                          "costPer1MTokens"
                        ],
                        "additionalProperties": false,
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "description",
                      "tags",
                      "input",
                      "output"
                    ],
                    "x-zui": {}
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "enum": [
                          "openai/gpt-oss-20b",
                          "openai/gpt-oss-120b",
                          "deepseek-r1-distill-llama-70b",
                          "llama-3.3-70b-versatile",
                          "llama-3.2-1b-preview",
                          "llama-3.2-3b-preview",
                          "llama-3.2-11b-vision-preview",
                          "llama-3.2-90b-vision-preview",
                          "llama-3.1-8b-instant",
                          "llama3-8b-8192",
                          "llama3-70b-8192",
                          "gemma2-9b-it"
                        ],
                        "description": "Model to use for content generation",
                        "x-zui": {
                          "placeholder": "mixtral-8x7b-32768"
                        }
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "x-zui": {}
                  }
                ],
                "x-zui": {}
              },
              "x-zui": {}
            }
          },
          "required": [
            "models"
          ],
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    "transcribeAudio": {
      "input": {
        "schema": {
          "type": "object",
          "properties": {
            "model": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "x-zui": {}
                }
              },
              "required": [
                "id"
              ],
              "additionalProperties": false,
              "x-zui": {}
            },
            "fileUrl": {
              "type": "string",
              "format": "uri",
              "description": "URL of the audio file to transcribe. The URL should return a content-type header in order to detect the audio format. Supported audio formats supported are: mp3, mp4, mpeg, mpga, m4a, wav, webm",
              "x-zui": {}
            },
            "language": {
              "type": "string",
              "description": "The language of the input audio (optional). Supplying the input language in ISO-639-1 format will improve accuracy and latency.",
              "x-zui": {}
            },
            "prompt": {
              "type": "string",
              "description": "An optional text to guide the model's style or continue a previous audio segment. The prompt should match the audio language.",
              "x-zui": {}
            },
            "temperature": {
              "type": "number",
              "description": "The sampling temperature (optional), between 0 and 1. Defaults to 0 (automatic). Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.",
              "x-zui": {},
              "default": 0
            }
          },
          "required": [
            "fileUrl"
          ],
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "output": {
        "schema": {
          "type": "object",
          "properties": {
            "language": {
              "type": "string",
              "description": "Detected language of the audio",
              "x-zui": {}
            },
            "duration": {
              "type": "number",
              "description": "Duration of the audio file, in seconds",
              "x-zui": {}
            },
            "segments": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "Text content of the segment.",
                    "x-zui": {}
                  },
                  "id": {
                    "type": "number",
                    "description": "Unique identifier of the segment",
                    "x-zui": {}
                  },
                  "seek": {
                    "type": "number",
                    "description": "Seek offset of the segment",
                    "x-zui": {}
                  },
                  "start": {
                    "type": "number",
                    "description": "Start time of the segment in seconds.",
                    "x-zui": {}
                  },
                  "end": {
                    "type": "number",
                    "description": "End time of the segment in seconds.",
                    "x-zui": {}
                  },
                  "tokens": {
                    "type": "array",
                    "items": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "description": "Array of token IDs for the text content.",
                    "x-zui": {}
                  },
                  "temperature": {
                    "type": "number",
                    "description": "Temperature parameter used for generating the segment.",
                    "x-zui": {}
                  },
                  "avg_logprob": {
                    "type": "number",
                    "description": "Average logprob of the segment. If the value is lower than -1, consider the logprobs failed.",
                    "x-zui": {}
                  },
                  "compression_ratio": {
                    "type": "number",
                    "description": "Compression ratio of the segment. If the value is greater than 2.4, consider the compression failed.",
                    "x-zui": {}
                  },
                  "no_speech_prob": {
                    "type": "number",
                    "description": "Probability of no speech in the segment. If the value is higher than 1.0 and the avg_logprob is below -1, consider this segment silent.",
                    "x-zui": {}
                  }
                },
                "required": [
                  "text",
                  "id",
                  "seek",
                  "start",
                  "end",
                  "tokens",
                  "temperature",
                  "avg_logprob",
                  "compression_ratio",
                  "no_speech_prob"
                ],
                "additionalProperties": false,
                "x-zui": {}
              },
              "x-zui": {}
            },
            "model": {
              "type": "string",
              "description": "Model name used",
              "x-zui": {}
            },
            "cost": {
              "type": "number",
              "description": "Total cost of the transcription, in U.S. dollars (DEPRECATED)",
              "x-zui": {}
            },
            "botpress": {
              "type": "object",
              "properties": {
                "cost": {
                  "type": "number",
                  "description": "Total cost of the transcription, in U.S. dollars",
                  "x-zui": {}
                }
              },
              "required": [
                "cost"
              ],
              "additionalProperties": false,
              "x-zui": {}
            }
          },
          "required": [
            "language",
            "duration",
            "segments",
            "model",
            "cost",
            "botpress"
          ],
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "billable": true,
      "cacheable": true
    },
    "listSpeechToTextModels": {
      "input": {
        "schema": {
          "type": "object",
          "properties": {},
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "output": {
        "schema": {
          "type": "object",
          "properties": {
            "models": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "name": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "costPerMinute": {
                        "type": "number",
                        "description": "Cost per minute of speech transcription, in U.S. dollars",
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "costPerMinute"
                    ],
                    "x-zui": {}
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "x-zui": {}
                  }
                ],
                "x-zui": {}
              },
              "x-zui": {}
            }
          },
          "required": [
            "models"
          ],
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    }
  },
  "channels": {},
  "entities": {
    "modelRef": {
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "enum": [
              "openai/gpt-oss-20b",
              "openai/gpt-oss-120b",
              "deepseek-r1-distill-llama-70b",
              "llama-3.3-70b-versatile",
              "llama-3.2-1b-preview",
              "llama-3.2-3b-preview",
              "llama-3.2-11b-vision-preview",
              "llama-3.2-90b-vision-preview",
              "llama-3.1-8b-instant",
              "llama3-8b-8192",
              "llama3-70b-8192",
              "gemma2-9b-it"
            ],
            "description": "Model to use for content generation",
            "x-zui": {
              "placeholder": "mixtral-8x7b-32768"
            }
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "x-zui": {},
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    "speechToTextModelRef": {
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "x-zui": {}
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "x-zui": {},
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    }
  },
  "interfaces": {
    "llm<modelRef>": {
      "id": "",
      "name": "llm",
      "version": "9.0.0",
      "entities": {
        "modelRef": {
          "name": "modelRef"
        }
      },
      "actions": {
        "generateContent": {
          "name": "generateContent"
        },
        "listLanguageModels": {
          "name": "listLanguageModels"
        }
      },
      "events": {},
      "channels": {}
    },
    "speech-to-text<speechToTextModelRef>": {
      "id": "",
      "name": "speech-to-text",
      "version": "2.0.1",
      "entities": {
        "speechToTextModelRef": {
          "name": "speechToTextModelRef"
        }
      },
      "actions": {
        "transcribeAudio": {
          "name": "transcribeAudio"
        },
        "listSpeechToTextModels": {
          "name": "listSpeechToTextModels"
        }
      },
      "events": {},
      "channels": {}
    }
  }
}
