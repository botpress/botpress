{
  "name": "file-synchronizer",
  "version": "1.0.1",
  "title": "File Synchronizer",
  "description": "Synchronize files from external services to Botpress",
  "user": {
    "tags": {}
  },
  "conversation": {
    "tags": {}
  },
  "configuration": {
    "schema": {
      "type": "object",
      "properties": {
        "enableRealTimeSync": {
          "type": "boolean",
          "description": "Enable real-time synchronization. Whever a file is created, updated, or deleted, synchronize it to Botpress immediately. This does not work with every integration.",
          "x-zui": {},
          "default": true
        },
        "includeFiles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "pathGlobPattern": {
                "type": "string",
                "description": "A glob pattern to match against the file path. Only files that match the pattern will be synchronized. Any pattern supported by picomatch is supported. For example, use rule \"**\" to match all files, or enter a path like \"/path/to/folder/**\" to match all files in a specific folder.",
                "x-zui": {
                  "placeholder": "Example: /path/to/folder/**"
                }
              },
              "maxSizeInBytes": {
                "type": "number",
                "description": "Filter by maximum size (in bytes). Only files smaller than the specified size will be synchronized.",
                "x-zui": {}
              },
              "modifiedAfter": {
                "type": "string",
                "format": "date-time",
                "description": "Filter the items by modified date. Only files modified after the specified date will be synchronized.",
                "x-zui": {}
              },
              "applyOptionsToMatchedFiles": {
                "type": "object",
                "properties": {
                  "addToKbId": {
                    "type": "string",
                    "description": "The ID of the knowledge base to add the file to. Note that files added to knowledge bases will count towards both the Vector DB Storage quota and the File Storage quota of the workspace.",
                    "x-zui": {
                      "placeholder": "Example: kb-2f0a7ea639",
                      "title": "Knowledge Base ID"
                    }
                  }
                },
                "additionalProperties": false,
                "description": "Options to apply to the matched files.",
                "x-zui": {
                  "title": "Apply to Matched Files"
                }
              }
            },
            "required": ["pathGlobPattern"],
            "additionalProperties": false,
            "description": "A file must match all criteria to be synchronized.",
            "x-zui": {
              "title": "Include Criteria"
            }
          },
          "description": "A list of rules to include files. Only files that match one or more rules will be synchronized.",
          "x-zui": {
            "title": "Include Rules"
          }
        },
        "excludeFiles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "pathGlobPattern": {
                "type": "string",
                "description": "A glob pattern to match against the file path. Files that match the pattern will be ignored, even if they match the includeFiles configuration.",
                "x-zui": {
                  "placeholder": "Example: /path/to/folder/**"
                }
              }
            },
            "required": ["pathGlobPattern"],
            "additionalProperties": false,
            "description": "A file must match all exclude criteria to be ignored.",
            "x-zui": {
              "title": "Exclude Criteria"
            }
          },
          "description": "A list of rules to exclude files. Files that match one or more rules will be ignored. This takes precedence over Include Rules.",
          "x-zui": {
            "title": "Exclude Rules"
          }
        }
      },
      "required": ["includeFiles", "excludeFiles"],
      "additionalProperties": false,
      "x-zui": {},
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  "events": {},
  "actions": {
    "syncFilesToBotpess": {
      "title": "Sync files to Botpress",
      "description": "Start synchronization of files from the external service to Botpress",
      "input": {
        "schema": {
          "type": "object",
          "properties": {
            "includeFiles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "pathGlobPattern": {
                    "type": "string",
                    "description": "A glob pattern to match against the file path. Only files that match the pattern will be synchronized. Any pattern supported by picomatch is supported. For example, use rule \"**\" to match all files, or enter a path like \"/path/to/folder/**\" to match all files in a specific folder.",
                    "x-zui": {
                      "placeholder": "Example: /path/to/folder/**"
                    }
                  },
                  "maxSizeInBytes": {
                    "type": "number",
                    "description": "Filter by maximum size (in bytes). Only files smaller than the specified size will be synchronized.",
                    "x-zui": {}
                  },
                  "modifiedAfter": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Filter the items by modified date. Only files modified after the specified date will be synchronized.",
                    "x-zui": {}
                  },
                  "applyOptionsToMatchedFiles": {
                    "type": "object",
                    "properties": {
                      "addToKbId": {
                        "type": "string",
                        "description": "The ID of the knowledge base to add the file to. Note that files added to knowledge bases will count towards both the Vector DB Storage quota and the File Storage quota of the workspace.",
                        "x-zui": {
                          "placeholder": "Example: kb-2f0a7ea639",
                          "title": "Knowledge Base ID"
                        }
                      }
                    },
                    "additionalProperties": false,
                    "description": "Options to apply to the matched files.",
                    "x-zui": {
                      "title": "Apply to Matched Files"
                    }
                  }
                },
                "required": ["pathGlobPattern"],
                "additionalProperties": false,
                "description": "A file must match all criteria to be synchronized.",
                "x-zui": {
                  "title": "Include Criteria"
                }
              },
              "description": "If omitted, the global Include Rules will be used.",
              "x-zui": {
                "title": "Include Rules Override"
              }
            },
            "excludeFiles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "pathGlobPattern": {
                    "type": "string",
                    "description": "A glob pattern to match against the file path. Files that match the pattern will be ignored, even if they match the includeFiles configuration.",
                    "x-zui": {
                      "placeholder": "Example: /path/to/folder/**"
                    }
                  }
                },
                "required": ["pathGlobPattern"],
                "additionalProperties": false,
                "description": "A file must match all exclude criteria to be ignored.",
                "x-zui": {
                  "title": "Exclude Criteria"
                }
              },
              "description": "If omitted, the global Exclude Rules will be used",
              "x-zui": {
                "title": "Exclude Rules Override"
              }
            }
          },
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "output": {
        "schema": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "enum": ["queued", "already-running", "error"],
              "x-zui": {}
            }
          },
          "required": ["status"],
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    "listItemsInFolder": {
      "input": {
        "schema": {
          "type": "object",
          "properties": {
            "folderId": {
              "type": "string",
              "description": "The folder's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique.",
              "x-zui": {}
            },
            "filters": {
              "type": "object",
              "properties": {
                "itemType": {
                  "type": "string",
                  "enum": ["file", "folder"],
                  "description": "The entity type",
                  "x-zui": {}
                },
                "maxSizeInBytes": {
                  "type": "number",
                  "description": "Filter the items by maximum size (in bytes)",
                  "x-zui": {}
                },
                "modifiedAfter": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Filter the items modified after the given date",
                  "x-zui": {}
                }
              },
              "additionalProperties": false,
              "description": "Optional search filters",
              "x-zui": {}
            },
            "nextToken": {
              "type": "string",
              "description": "The token to get the next page of items. Leave empty to get the first page.",
              "x-zui": {}
            }
          },
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "output": {
        "schema": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The file's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique.",
                        "x-zui": {}
                      },
                      "type": {
                        "type": "string",
                        "const": "file",
                        "x-zui": {}
                      },
                      "name": {
                        "type": "string",
                        "description": "The file's name. This will be displayed in the Botpress UI and be used as the file's name on Files API.\"",
                        "x-zui": {}
                      },
                      "parentId": {
                        "type": "string",
                        "description": "The parent folder ID. Leave empty if the file is in the root folder.",
                        "x-zui": {}
                      },
                      "absolutePath": {
                        "type": "string",
                        "description": "The absolute path of the file. Leave empty if not available.",
                        "x-zui": {}
                      },
                      "sizeInBytes": {
                        "type": "number",
                        "description": "The file size in bytes, if available",
                        "x-zui": {}
                      },
                      "lastModifiedDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The last modified date of the file, if available",
                        "x-zui": {}
                      },
                      "contentHash": {
                        "type": "string",
                        "description": "The hash of the file content, or version/revision number, if available",
                        "x-zui": {}
                      }
                    },
                    "required": ["id", "type", "name"],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The folder's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique.",
                        "x-zui": {}
                      },
                      "type": {
                        "type": "string",
                        "const": "folder",
                        "x-zui": {}
                      },
                      "name": {
                        "type": "string",
                        "description": "The folder's name. This will be displayed in the Botpress UI and be used as the folder's name on Files API.\"",
                        "x-zui": {}
                      },
                      "parentId": {
                        "type": "string",
                        "description": "The parent folder ID. Leave empty if the folder is in the root folder.",
                        "x-zui": {}
                      },
                      "absolutePath": {
                        "type": "string",
                        "description": "The absolute path of the folder. Leave empty if not available.",
                        "x-zui": {}
                      }
                    },
                    "required": ["id", "type", "name"],
                    "additionalProperties": false,
                    "x-zui": {}
                  }
                ],
                "x-zui": {}
              },
              "description": "The files and folders in the folder",
              "x-zui": {}
            },
            "meta": {
              "type": "object",
              "properties": {
                "nextToken": {
                  "type": "string",
                  "description": "The token to get the next page of items.",
                  "x-zui": {}
                }
              },
              "additionalProperties": false,
              "x-zui": {}
            }
          },
          "required": ["items", "meta"],
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "title": "List items in folder",
      "description": "List the files and folders in a folder",
      "attributes": {
        "bpActionHiddenInStudio": "true"
      }
    }
  },
  "states": {}
}
