name: 'Create or Update Secret'
description: 'Creates or updates a secret in the repository'

inputs:
  secret_name:
    description: 'Secret name'
    required: true
  secret_value:
    description: 'Secret value'
    required: true

runs:
  using: 'composite'
  steps:
    - uses: actions/github-script@v8
      id: set-secret
      env:
        SECRET_NAME: ${{ inputs.secret_name }}
        SECRET_VALUE: ${{ inputs.secret_value }}
      with:
        script: |
          const sodium = require('sodium-native');
          const { data: {key: publicKey, key_id: keyId} } = await github.rest.actions.getRepoPublicKey({...context.repo});
          if (publicKey) {
            const key = Buffer.from(publicKey, 'base64');
            const message = Buffer.from(process.env.SECRET_VALUE);
            const ciphertext = Buffer.alloc(message.length + sodium.crypto_box_SEALBYTES);

            sodium.crypto_box_seal(ciphertext, message, key);
            const encryptedToken = ciphertext.toString('base64');

            await github.rest.actions.createOrUpdateRepoSecret({
              ...context.repo,
              secret_name: process.env.SECRET_NAME,
              encrypted_value: encryptedToken,
              key_id: keyId,
            });
          } else {
            core.error('Failed to fetch the public key. Unable to update secret');
          }
