{
  "name": "file-synchronizer",
  "version": "0.4.0",
  "title": "File Synchronizer",
  "description": "Synchronize files from external services to Botpress",
  "user": {
    "tags": {}
  },
  "conversation": {
    "tags": {}
  },
  "configuration": {
    "schema": {
      "type": "object",
      "properties": {
        "enablePeriodicSync": {
          "type": "object",
          "properties": {
            "everyNHours": {
              "type": "number",
              "description": "The interval (in hours) at which to synchronize files."
            }
          },
          "required": ["everyNHours"],
          "additionalProperties": false,

          "description": "Enable synchronisation using the provided schedule. Leave empty to disable periodic synchronization."
        },
        "enableRealTimeSync": {
          "type": "boolean",

          "default": true,
          "description": "Enable real-time synchronization. Whever a file is created, updated, or deleted, synchronize it to Botpress immediately. This does not work with every integration."
        },
        "includeFiles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "pathGlobPattern": {
                "type": "string",
                "description": "A glob pattern to match against the file path. Only files that match the pattern will be synchronized. Any pattern supported by picomatch is supported."
              },
              "maxSizeInBytes": {
                "type": "number",

                "description": "Filter by maximum size (in bytes). Only files smaller than the specified size will be synchronized."
              },
              "modifiedAfter": {
                "type": "string",
                "format": "date-time",

                "description": "Filter the items by modified date. Only files modified after the specified date will be synchronized."
              }
            },
            "required": ["pathGlobPattern"],
            "additionalProperties": false,
            "description": "A file must match all criteria to be synchronized.",
            "x-zui": {
              "title": "Include Criteria"
            }
          },
          "description": "A list of rules to include files. Only files that match one or more rules will be synchronized.",
          "x-zui": {
            "title": "Include Rules Override"
          }
        },
        "excludeFiles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "pathGlobPattern": {
                "type": "string",
                "description": "A glob pattern to match against the file path. Files that match the pattern will be ignored, even if they match the includeFiles configuration."
              }
            },
            "required": ["pathGlobPattern"],
            "additionalProperties": false,
            "description": "A file must match all exclude criteria to be ignored.",
            "x-zui": {
              "title": "Exclude Criteria"
            }
          },
          "description": "A list of rules to exclude files. Files that match one or more rules will be ignored. This takes precedence over Include Rules.",
          "x-zui": {
            "title": "Exclude Rules Override"
          }
        }
      },
      "required": ["includeFiles", "excludeFiles"],
      "additionalProperties": false
    }
  },
  "events": {
    "periodicSync": {
      "schema": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      }
    }
  },
  "actions": {
    "syncFilesToBotpess": {
      "title": "Sync files to Botpress",
      "description": "Start synchronization of files from the external service to Botpress",
      "input": {
        "schema": {
          "type": "object",
          "properties": {
            "includeFiles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "pathGlobPattern": {
                    "type": "string",
                    "description": "A glob pattern to match against the file path. Only files that match the pattern will be synchronized. Any pattern supported by picomatch is supported."
                  },
                  "maxSizeInBytes": {
                    "type": "number",

                    "description": "Filter by maximum size (in bytes). Only files smaller than the specified size will be synchronized."
                  },
                  "modifiedAfter": {
                    "type": "string",
                    "format": "date-time",

                    "description": "Filter the items by modified date. Only files modified after the specified date will be synchronized."
                  }
                },
                "required": ["pathGlobPattern"],
                "additionalProperties": false,
                "description": "A file must match all criteria to be synchronized.",
                "x-zui": {
                  "title": "Include Criteria"
                }
              },
              "description": "If omitted, the global Include Rules will be used.",
              "x-zui": {
                "title": "Include Rules Override"
              }
            },
            "excludeFiles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "pathGlobPattern": {
                    "type": "string",
                    "description": "A glob pattern to match against the file path. Files that match the pattern will be ignored, even if they match the includeFiles configuration."
                  }
                },
                "required": ["pathGlobPattern"],
                "additionalProperties": false,
                "description": "A file must match all exclude criteria to be ignored.",
                "x-zui": {
                  "title": "Exclude Criteria"
                }
              },
              "description": "If omitted, the global Exclude Rules will be used",
              "x-zui": {
                "title": "Exclude Rules Override"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "output": {
        "schema": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "enum": ["queued", "already-running", "error"]
            }
          },
          "required": ["status"],
          "additionalProperties": false
        }
      }
    },
    "listItemsInFolder": {
      "input": {
        "schema": {
          "type": "object",
          "properties": {
            "folderId": {
              "type": "string"
            },
            "filters": {
              "type": "object",
              "properties": {
                "itemType": {
                  "type": "string",
                  "enum": ["file", "folder"]
                },
                "maxSizeInBytes": {
                  "type": "number"
                },
                "modifiedAfter": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "nextToken": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "output": {
        "schema": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "const": "file"
                      },
                      "name": {
                        "type": "string"
                      },
                      "parentId": {
                        "type": "string"
                      },
                      "absolutePath": {
                        "type": "string"
                      },
                      "sizeInBytes": {
                        "type": "number"
                      },
                      "lastModifiedDate": {
                        "type": "string"
                      },
                      "contentHash": {
                        "type": "string"
                      }
                    },
                    "required": ["id", "type", "name"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "const": "folder"
                      },
                      "name": {
                        "type": "string"
                      },
                      "parentId": {
                        "type": "string"
                      },
                      "absolutePath": {
                        "type": "string"
                      }
                    },
                    "required": ["id", "type", "name"],
                    "additionalProperties": false
                  }
                ]
              }
            },
            "meta": {
              "type": "object",
              "properties": {
                "nextToken": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "required": ["items", "meta"],
          "additionalProperties": false
        }
      },
      "title": "List items in folder",
      "description": "List the files and folders in a folder"
    }
  },
  "states": {
    "periodicSync": {
      "type": "bot",
      "schema": {
        "type": "object",
        "properties": {
          "elapsedHoursSinceLastSync": {
            "type": "number"
          }
        },
        "required": ["elapsedHoursSinceLastSync"],
        "additionalProperties": false
      },
      "expiry": 172800000
    }
  }
}
