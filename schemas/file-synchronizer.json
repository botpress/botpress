{
  "actions": {
    "listItemsInFolder": {
      "description": "List the files and folders in a folder",
      "input": {
        "schema": {
          "additionalProperties": false,
          "properties": {
            "filters": {
              "additionalProperties": false,
              "properties": {
                "itemType": { "enum": ["file", "folder"], "type": "string" },
                "maxSizeInBytes": { "type": "number" },
                "modifiedAfter": { "type": "string" }
              },
              "type": "object"
            },
            "folderId": { "type": "string" },
            "nextToken": { "type": "string" }
          },
          "type": "object"
        }
      },
      "output": {
        "schema": {
          "additionalProperties": false,
          "properties": {
            "items": {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "absolutePath": { "type": "string" },
                      "contentHash": { "type": "string" },
                      "id": { "type": "string" },
                      "lastModifiedDate": { "type": "string" },
                      "name": { "type": "string" },
                      "parentId": { "type": "string" },
                      "sizeInBytes": { "type": "number" },
                      "type": { "const": "file", "type": "string" }
                    },
                    "required": ["id", "type", "name"],
                    "type": "object"
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "absolutePath": { "type": "string" },
                      "id": { "type": "string" },
                      "name": { "type": "string" },
                      "parentId": { "type": "string" },
                      "type": { "const": "folder", "type": "string" }
                    },
                    "required": ["id", "type", "name"],
                    "type": "object"
                  }
                ]
              },
              "type": "array"
            },
            "meta": {
              "additionalProperties": false,
              "properties": { "nextToken": { "type": "string" } },
              "type": "object"
            }
          },
          "required": ["items", "meta"],
          "type": "object"
        }
      },
      "title": "List items in folder"
    },
    "syncFilesToBotpess": {
      "description": "Start synchronization of files from the external service to Botpress",
      "input": {
        "schema": {
          "additionalProperties": false,
          "properties": {
            "excludeFiles": {
              "description": "If omitted, the global Exclude Rules will be used",
              "items": {
                "additionalProperties": false,
                "description": "A file must match all exclude criteria to be ignored.",
                "properties": {
                  "pathGlobPattern": {
                    "description": "A glob pattern to match against the file path. Files that match the pattern will be ignored, even if they match the includeFiles configuration.",
                    "type": "string"
                  }
                },
                "required": ["pathGlobPattern"],
                "type": "object",
                "x-zui": { "title": "Exclude Criteria" }
              },
              "type": "array",
              "x-zui": { "title": "Exclude Rules Override" }
            },
            "includeFiles": {
              "description": "If omitted, the global Include Rules will be used.",
              "items": {
                "additionalProperties": false,
                "description": "A file must match all criteria to be synchronized.",
                "properties": {
                  "maxSizeInBytes": {
                    "description": "Filter by maximum size (in bytes). Only files smaller than the specified size will be synchronized.",
                    "type": "number"
                  },
                  "modifiedAfter": {
                    "description": "Filter the items by modified date. Only files modified after the specified date will be synchronized.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "pathGlobPattern": {
                    "description": "A glob pattern to match against the file path. Only files that match the pattern will be synchronized. Any pattern supported by picomatch is supported.",
                    "type": "string"
                  }
                },
                "required": ["pathGlobPattern"],
                "type": "object",
                "x-zui": { "title": "Include Criteria" }
              },
              "type": "array",
              "x-zui": { "title": "Include Rules Override" }
            }
          },
          "type": "object"
        }
      },
      "output": {
        "schema": {
          "additionalProperties": false,
          "properties": { "status": { "enum": ["queued", "already-running", "error"], "type": "string" } },
          "required": ["status"],
          "type": "object"
        }
      },
      "title": "Sync files to Botpress"
    }
  },
  "configuration": {
    "schema": {
      "additionalProperties": false,
      "properties": {
        "enablePeriodicSync": {
          "additionalProperties": false,
          "description": "Enable synchronisation using the provided schedule. Leave empty to disable periodic synchronization.",
          "properties": {
            "everyNHours": { "description": "The interval (in hours) at which to synchronize files.", "type": "number" }
          },
          "required": ["everyNHours"],
          "type": "object"
        },
        "enableRealTimeSync": {
          "default": true,
          "description": "Enable real-time synchronization. Whever a file is created, updated, or deleted, synchronize it to Botpress immediately. This does not work with every integration.",
          "type": "boolean"
        },
        "excludeFiles": {
          "description": "A list of rules to exclude files. Files that match one or more rules will be ignored. This takes precedence over Include Rules.",
          "items": {
            "additionalProperties": false,
            "description": "A file must match all exclude criteria to be ignored.",
            "properties": {
              "pathGlobPattern": {
                "description": "A glob pattern to match against the file path. Files that match the pattern will be ignored, even if they match the includeFiles configuration.",
                "type": "string"
              }
            },
            "required": ["pathGlobPattern"],
            "type": "object",
            "x-zui": { "title": "Exclude Criteria" }
          },
          "type": "array",
          "x-zui": { "title": "Exclude Rules Override" }
        },
        "includeFiles": {
          "description": "A list of rules to include files. Only files that match one or more rules will be synchronized.",
          "items": {
            "additionalProperties": false,
            "description": "A file must match all criteria to be synchronized.",
            "properties": {
              "maxSizeInBytes": {
                "description": "Filter by maximum size (in bytes). Only files smaller than the specified size will be synchronized.",
                "type": "number"
              },
              "modifiedAfter": {
                "description": "Filter the items by modified date. Only files modified after the specified date will be synchronized.",
                "format": "date-time",
                "type": "string"
              },
              "pathGlobPattern": {
                "description": "A glob pattern to match against the file path. Only files that match the pattern will be synchronized. Any pattern supported by picomatch is supported.",
                "type": "string"
              }
            },
            "required": ["pathGlobPattern"],
            "type": "object",
            "x-zui": { "title": "Include Criteria" }
          },
          "type": "array",
          "x-zui": { "title": "Include Rules Override" }
        }
      },
      "required": ["includeFiles", "excludeFiles"],
      "type": "object"
    }
  },
  "conversation": { "tags": {} },
  "description": "Synchronize files from external services to Botpress",
  "events": { "periodicSync": { "schema": { "additionalProperties": false, "properties": {}, "type": "object" } } },
  "name": "file-synchronizer",
  "states": {
    "periodicSync": {
      "expiry": 172800000,
      "schema": {
        "additionalProperties": false,
        "properties": { "elapsedHoursSinceLastSync": { "type": "number" } },
        "required": ["elapsedHoursSinceLastSync"],
        "type": "object"
      },
      "type": "bot"
    }
  },
  "title": "File Synchronizer",
  "user": { "tags": {} },
  "version": "0.4.0"
}
