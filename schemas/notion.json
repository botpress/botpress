{
  "actions": {
    "addCommentToDiscussion": {
      "description": "Add a comment to a discussion in Notion",
      "input": {
        "schema": {
          "additionalProperties": false,
          "properties": {
            "commentBody": {
              "description": "Must be plain text",
              "minLength": 1,
              "type": "string",
              "x-zui": { "title": "Comment Body" }
            },
            "discussionId": {
              "description": "The ID of the discussion to add the comment to. Can be found in the URL of the discussion",
              "minLength": 1,
              "type": "string",
              "x-zui": { "title": "Discussion ID" }
            }
          },
          "required": ["discussionId", "commentBody"],
          "type": "object"
        }
      },
      "output": { "schema": { "additionalProperties": false, "properties": {}, "type": "object" } },
      "title": "Add Comment to Discussion"
    },
    "addCommentToPage": {
      "description": "Add a comment to a page in Notion",
      "input": {
        "schema": {
          "additionalProperties": false,
          "properties": {
            "commentBody": {
              "description": "Must be plain text",
              "minLength": 1,
              "type": "string",
              "x-zui": { "title": "Comment Body" }
            },
            "pageId": {
              "description": "The ID of the page to add the comment to. Can be found in the URL of the page",
              "minLength": 1,
              "type": "string",
              "x-zui": { "title": "Page ID" }
            }
          },
          "required": ["pageId", "commentBody"],
          "type": "object"
        }
      },
      "output": { "schema": { "additionalProperties": false, "properties": {}, "type": "object" } },
      "title": "Add Comment to Page"
    },
    "addPageToDb": {
      "description": "Add a new page to a database in Notion",
      "input": {
        "schema": {
          "additionalProperties": false,
          "properties": {
            "databaseId": {
              "description": "The ID of the database to add the page to. Can be found in the URL of the database",
              "minLength": 1,
              "type": "string",
              "x-zui": { "title": "Database ID" }
            },
            "pageProperties": {
              "additionalProperties": { "additionalProperties": true, "properties": {}, "type": "object" },
              "description": "The values of the page's properties. Must match the parent database's properties",
              "type": "object",
              "x-zui": { "title": "Page Properties" }
            }
          },
          "required": ["databaseId", "pageProperties"],
          "type": "object"
        }
      },
      "output": { "schema": { "additionalProperties": false, "properties": {}, "type": "object" } },
      "title": "Create Page in Database"
    },
    "deleteBlock": {
      "description": "Delete a block in Notion",
      "input": {
        "schema": {
          "additionalProperties": false,
          "properties": {
            "blockId": {
              "description": "The ID of the block to delete. Can be found in the URL of the block",
              "minLength": 1,
              "type": "string",
              "x-zui": { "title": "Block ID" }
            }
          },
          "required": ["blockId"],
          "type": "object"
        }
      },
      "output": { "schema": { "additionalProperties": false, "properties": {}, "type": "object" } },
      "title": "Delete Block"
    },
    "filesReadonlyListItemsInFolder": {
      "description": "List the files and folders in a folder",
      "input": {
        "schema": {
          "additionalProperties": false,
          "properties": {
            "filters": {
              "additionalProperties": false,
              "properties": {
                "itemType": { "enum": ["file", "folder"], "type": "string" },
                "maxSizeInBytes": { "type": "number" },
                "modifiedAfter": { "type": "string" }
              },
              "type": "object"
            },
            "folderId": { "type": "string" },
            "nextToken": { "type": "string" }
          },
          "type": "object"
        }
      },
      "name": "filesReadonlyListItemsInFolder",
      "output": {
        "schema": {
          "additionalProperties": false,
          "properties": {
            "items": {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "absolutePath": { "type": "string" },
                      "contentHash": { "type": "string" },
                      "id": { "type": "string" },
                      "lastModifiedDate": { "type": "string" },
                      "name": { "type": "string" },
                      "parentId": { "type": "string" },
                      "sizeInBytes": { "type": "number" },
                      "type": { "const": "file", "type": "string" }
                    },
                    "required": ["id", "type", "name"],
                    "type": "object"
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "absolutePath": { "type": "string" },
                      "id": { "type": "string" },
                      "name": { "type": "string" },
                      "parentId": { "type": "string" },
                      "type": { "const": "folder", "type": "string" }
                    },
                    "required": ["id", "type", "name"],
                    "type": "object"
                  }
                ]
              },
              "type": "array"
            },
            "meta": {
              "additionalProperties": false,
              "properties": { "nextToken": { "type": "string" } },
              "type": "object"
            }
          },
          "required": ["items", "meta"],
          "type": "object"
        }
      },
      "title": "List items in folder"
    },
    "filesReadonlyTransferFileToBotpress": {
      "description": "Transfer a file from an external service to Botpress",
      "input": {
        "schema": {
          "additionalProperties": false,
          "properties": {
            "file": {
              "additionalProperties": false,
              "properties": {
                "absolutePath": { "type": "string" },
                "contentHash": { "type": "string" },
                "id": { "type": "string" },
                "lastModifiedDate": { "type": "string" },
                "name": { "type": "string" },
                "parentId": { "type": "string" },
                "sizeInBytes": { "type": "number" },
                "type": { "const": "file", "type": "string" }
              },
              "required": ["id", "type", "name"],
              "type": "object"
            },
            "fileKey": { "type": "string" }
          },
          "required": ["file", "fileKey"],
          "type": "object"
        }
      },
      "name": "filesReadonlyTransferFileToBotpress",
      "output": {
        "schema": {
          "additionalProperties": false,
          "properties": { "botpressFileId": { "type": "string" } },
          "required": ["botpressFileId"],
          "type": "object"
        }
      },
      "title": "Transfer file to Botpress"
    },
    "getDb": {
      "description": "Get a database from Notion",
      "input": {
        "schema": {
          "additionalProperties": false,
          "properties": {
            "databaseId": {
              "description": "The ID of the database to fetch. Can be found in the URL of the database",
              "minLength": 1,
              "type": "string",
              "x-zui": { "title": "Database ID" }
            }
          },
          "required": ["databaseId"],
          "type": "object"
        }
      },
      "output": {
        "schema": {
          "additionalProperties": false,
          "properties": {
            "object": {
              "description": "A stringified representation of the database",
              "type": "string",
              "x-zui": { "title": "Database Object" }
            },
            "properties": {
              "additionalProperties": { "additionalProperties": true, "properties": {}, "type": "object" },
              "description": "Schema of properties for the database as they appear in Notion",
              "type": "object",
              "x-zui": { "title": "Database Properties" }
            },
            "structure": {
              "description": "A stringified representation of the database structure",
              "type": "string",
              "x-zui": { "title": "Database Structure" }
            }
          },
          "required": ["object", "properties", "structure"],
          "type": "object"
        }
      },
      "title": "Get Database"
    }
  },
  "channels": {},
  "description": "Add pages and comments, manage databases, and engage in discussions â€” all within your chatbot.",
  "events": {
    "aggregateFileChanges": {
      "schema": {
        "additionalProperties": false,
        "properties": {
          "modifiedItems": {
            "additionalProperties": false,
            "properties": {
              "created": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "absolutePath": { "type": "string" },
                    "contentHash": { "type": "string" },
                    "id": { "type": "string" },
                    "lastModifiedDate": { "type": "string" },
                    "name": { "type": "string" },
                    "parentId": { "type": "string" },
                    "sizeInBytes": { "type": "number" },
                    "type": { "const": "file", "type": "string" }
                  },
                  "required": ["id", "type", "name", "absolutePath"],
                  "type": "object"
                },
                "type": "array"
              },
              "deleted": {
                "items": {
                  "anyOf": [
                    {
                      "additionalProperties": false,
                      "properties": {
                        "absolutePath": { "type": "string" },
                        "contentHash": { "type": "string" },
                        "id": { "type": "string" },
                        "lastModifiedDate": { "type": "string" },
                        "name": { "type": "string" },
                        "parentId": { "type": "string" },
                        "sizeInBytes": { "type": "number" },
                        "type": { "const": "file", "type": "string" }
                      },
                      "required": ["id", "type", "name", "absolutePath"],
                      "type": "object"
                    },
                    {
                      "additionalProperties": false,
                      "properties": {
                        "absolutePath": { "type": "string" },
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "parentId": { "type": "string" },
                        "type": { "const": "folder", "type": "string" }
                      },
                      "required": ["id", "type", "name", "absolutePath"],
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              },
              "updated": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "absolutePath": { "type": "string" },
                    "contentHash": { "type": "string" },
                    "id": { "type": "string" },
                    "lastModifiedDate": { "type": "string" },
                    "name": { "type": "string" },
                    "parentId": { "type": "string" },
                    "sizeInBytes": { "type": "number" },
                    "type": { "const": "file", "type": "string" }
                  },
                  "required": ["id", "type", "name", "absolutePath"],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": ["created", "updated", "deleted"],
            "type": "object"
          }
        },
        "required": ["modifiedItems"],
        "type": "object"
      }
    },
    "fileCreated": {
      "schema": {
        "additionalProperties": false,
        "properties": {
          "file": {
            "additionalProperties": false,
            "properties": {
              "absolutePath": { "type": "string" },
              "contentHash": { "type": "string" },
              "id": { "type": "string" },
              "lastModifiedDate": { "type": "string" },
              "name": { "type": "string" },
              "parentId": { "type": "string" },
              "sizeInBytes": { "type": "number" },
              "type": { "const": "file", "type": "string" }
            },
            "required": ["id", "type", "name", "absolutePath"],
            "type": "object"
          }
        },
        "required": ["file"],
        "type": "object"
      }
    },
    "fileDeleted": {
      "schema": {
        "additionalProperties": false,
        "properties": {
          "file": {
            "additionalProperties": false,
            "properties": {
              "absolutePath": { "type": "string" },
              "contentHash": { "type": "string" },
              "id": { "type": "string" },
              "lastModifiedDate": { "type": "string" },
              "name": { "type": "string" },
              "parentId": { "type": "string" },
              "sizeInBytes": { "type": "number" },
              "type": { "const": "file", "type": "string" }
            },
            "required": ["id", "type", "name", "absolutePath"],
            "type": "object"
          }
        },
        "required": ["file"],
        "type": "object"
      }
    },
    "fileUpdated": {
      "schema": {
        "additionalProperties": false,
        "properties": {
          "file": {
            "additionalProperties": false,
            "properties": {
              "absolutePath": { "type": "string" },
              "contentHash": { "type": "string" },
              "id": { "type": "string" },
              "lastModifiedDate": { "type": "string" },
              "name": { "type": "string" },
              "parentId": { "type": "string" },
              "sizeInBytes": { "type": "number" },
              "type": { "const": "file", "type": "string" }
            },
            "required": ["id", "type", "name", "absolutePath"],
            "type": "object"
          }
        },
        "required": ["file"],
        "type": "object"
      }
    },
    "folderDeletedRecursive": {
      "schema": {
        "additionalProperties": false,
        "properties": {
          "folder": {
            "additionalProperties": false,
            "properties": {
              "absolutePath": { "type": "string" },
              "id": { "type": "string" },
              "name": { "type": "string" },
              "parentId": { "type": "string" },
              "type": { "const": "folder", "type": "string" }
            },
            "required": ["id", "type", "name", "absolutePath"],
            "type": "object"
          }
        },
        "required": ["folder"],
        "type": "object"
      }
    }
  },
  "interfaces": {
    "files-readonly": {
      "actions": {
        "listItemsInFolder": { "name": "filesReadonlyListItemsInFolder" },
        "transferFileToBotpress": { "name": "filesReadonlyTransferFileToBotpress" }
      },
      "channels": {},
      "entities": {},
      "events": {
        "aggregateFileChanges": { "name": "aggregateFileChanges" },
        "fileCreated": { "name": "fileCreated" },
        "fileDeleted": { "name": "fileDeleted" },
        "fileUpdated": { "name": "fileUpdated" },
        "folderDeletedRecursive": { "name": "folderDeletedRecursive" }
      },
      "id": "",
      "name": "files-readonly",
      "version": "0.2.0"
    }
  },
  "name": "notion",
  "states": {
    "oauth": {
      "schema": {
        "additionalProperties": false,
        "properties": {
          "authToken": {
            "description": "The token used to authenticate with Notion. Currently, these tokens never expire",
            "type": "string",
            "x-zui": { "title": "OAuth Authentication Token" }
          }
        },
        "required": ["authToken"],
        "type": "object"
      },
      "type": "integration"
    }
  },
  "title": "Notion",
  "user": { "tags": { "id": { "description": "The ID of the user on Notion.", "title": "Notion User ID" } } },
  "version": "2.0.0"
}
