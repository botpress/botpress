{
  "name": "files-readonly",
  "version": "0.2.0",
  "entities": {},
  "events": {
    "fileCreated": {
      "schema": {
        "type": "object",
        "properties": {
          "file": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The file's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique."
              },
              "type": {
                "type": "string",
                "const": "file"
              },
              "name": {
                "type": "string",
                "description": "The file's name. This will be displayed in the Botpress UI and be used as the file's name on Files API.\""
              },
              "parentId": {
                "type": "string",

                "description": "The parent folder ID. Leave empty if the file is in the root folder."
              },
              "absolutePath": {
                "type": "string",
                "description": "The full path of the file"
              },
              "sizeInBytes": {
                "type": "number",

                "description": "The file size in bytes, if available"
              },
              "lastModifiedDate": {
                "type": "string",
                "format": "date-time",

                "description": "The last modified date of the file, if available"
              },
              "contentHash": {
                "type": "string",

                "description": "The hash of the file content, or version/revision number, if available"
              }
            },
            "required": ["id", "type", "name", "absolutePath"],
            "additionalProperties": false,
            "description": "The created file"
          }
        },
        "required": ["file"],
        "additionalProperties": false
      }
    },
    "fileUpdated": {
      "schema": {
        "type": "object",
        "properties": {
          "file": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The file's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique."
              },
              "type": {
                "type": "string",
                "const": "file"
              },
              "name": {
                "type": "string",
                "description": "The file's name. This will be displayed in the Botpress UI and be used as the file's name on Files API.\""
              },
              "parentId": {
                "type": "string",

                "description": "The parent folder ID. Leave empty if the file is in the root folder."
              },
              "absolutePath": {
                "type": "string",
                "description": "The full path of the file"
              },
              "sizeInBytes": {
                "type": "number",

                "description": "The file size in bytes, if available"
              },
              "lastModifiedDate": {
                "type": "string",
                "format": "date-time",

                "description": "The last modified date of the file, if available"
              },
              "contentHash": {
                "type": "string",

                "description": "The hash of the file content, or version/revision number, if available"
              }
            },
            "required": ["id", "type", "name", "absolutePath"],
            "additionalProperties": false,
            "description": "The updated file"
          }
        },
        "required": ["file"],
        "additionalProperties": false
      }
    },
    "fileDeleted": {
      "schema": {
        "type": "object",
        "properties": {
          "file": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The file's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique."
              },
              "type": {
                "type": "string",
                "const": "file"
              },
              "name": {
                "type": "string",
                "description": "The file's name. This will be displayed in the Botpress UI and be used as the file's name on Files API.\""
              },
              "parentId": {
                "type": "string",

                "description": "The parent folder ID. Leave empty if the file is in the root folder."
              },
              "absolutePath": {
                "type": "string",
                "description": "The full path of the file"
              },
              "sizeInBytes": {
                "type": "number",

                "description": "The file size in bytes, if available"
              },
              "lastModifiedDate": {
                "type": "string",
                "format": "date-time",

                "description": "The last modified date of the file, if available"
              },
              "contentHash": {
                "type": "string",

                "description": "The hash of the file content, or version/revision number, if available"
              }
            },
            "required": ["id", "type", "name", "absolutePath"],
            "additionalProperties": false,
            "description": "The deleted file"
          }
        },
        "required": ["file"],
        "additionalProperties": false
      }
    },
    "folderDeletedRecursive": {
      "schema": {
        "type": "object",
        "properties": {
          "folder": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The folder's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique."
              },
              "type": {
                "type": "string",
                "const": "folder"
              },
              "name": {
                "type": "string",
                "description": "The folder's name. This will be displayed in the Botpress UI and be used as the folder's name on Files API.\""
              },
              "parentId": {
                "type": "string",

                "description": "The parent folder ID. Leave empty if the folder is in the root folder."
              },
              "absolutePath": {
                "type": "string",
                "description": "The full path of the folder"
              }
            },
            "required": ["id", "type", "name", "absolutePath"],
            "additionalProperties": false,
            "description": "The deleted folder"
          }
        },
        "required": ["folder"],
        "additionalProperties": false
      }
    },
    "aggregateFileChanges": {
      "schema": {
        "type": "object",
        "properties": {
          "modifiedItems": {
            "type": "object",
            "properties": {
              "created": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The file's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique."
                    },
                    "type": {
                      "type": "string",
                      "const": "file"
                    },
                    "name": {
                      "type": "string",
                      "description": "The file's name. This will be displayed in the Botpress UI and be used as the file's name on Files API.\""
                    },
                    "parentId": {
                      "type": "string",

                      "description": "The parent folder ID. Leave empty if the file is in the root folder."
                    },
                    "absolutePath": {
                      "type": "string",
                      "description": "The full path of the file"
                    },
                    "sizeInBytes": {
                      "type": "number",

                      "description": "The file size in bytes, if available"
                    },
                    "lastModifiedDate": {
                      "type": "string",
                      "format": "date-time",

                      "description": "The last modified date of the file, if available"
                    },
                    "contentHash": {
                      "type": "string",

                      "description": "The hash of the file content, or version/revision number, if available"
                    }
                  },
                  "required": ["id", "type", "name", "absolutePath"],
                  "additionalProperties": false
                },
                "description": "The files created"
              },
              "updated": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The file's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique."
                    },
                    "type": {
                      "type": "string",
                      "const": "file"
                    },
                    "name": {
                      "type": "string",
                      "description": "The file's name. This will be displayed in the Botpress UI and be used as the file's name on Files API.\""
                    },
                    "parentId": {
                      "type": "string",

                      "description": "The parent folder ID. Leave empty if the file is in the root folder."
                    },
                    "absolutePath": {
                      "type": "string",
                      "description": "The full path of the file"
                    },
                    "sizeInBytes": {
                      "type": "number",

                      "description": "The file size in bytes, if available"
                    },
                    "lastModifiedDate": {
                      "type": "string",
                      "format": "date-time",

                      "description": "The last modified date of the file, if available"
                    },
                    "contentHash": {
                      "type": "string",

                      "description": "The hash of the file content, or version/revision number, if available"
                    }
                  },
                  "required": ["id", "type", "name", "absolutePath"],
                  "additionalProperties": false
                },
                "description": "The files updated"
              },
              "deleted": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The file's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique."
                        },
                        "type": {
                          "type": "string",
                          "const": "file"
                        },
                        "name": {
                          "type": "string",
                          "description": "The file's name. This will be displayed in the Botpress UI and be used as the file's name on Files API.\""
                        },
                        "parentId": {
                          "type": "string",

                          "description": "The parent folder ID. Leave empty if the file is in the root folder."
                        },
                        "absolutePath": {
                          "type": "string",
                          "description": "The full path of the file"
                        },
                        "sizeInBytes": {
                          "type": "number",

                          "description": "The file size in bytes, if available"
                        },
                        "lastModifiedDate": {
                          "type": "string",
                          "format": "date-time",

                          "description": "The last modified date of the file, if available"
                        },
                        "contentHash": {
                          "type": "string",

                          "description": "The hash of the file content, or version/revision number, if available"
                        }
                      },
                      "required": ["id", "type", "name", "absolutePath"],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The folder's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique."
                        },
                        "type": {
                          "type": "string",
                          "const": "folder"
                        },
                        "name": {
                          "type": "string",
                          "description": "The folder's name. This will be displayed in the Botpress UI and be used as the folder's name on Files API.\""
                        },
                        "parentId": {
                          "type": "string",

                          "description": "The parent folder ID. Leave empty if the folder is in the root folder."
                        },
                        "absolutePath": {
                          "type": "string",
                          "description": "The full path of the folder"
                        }
                      },
                      "required": ["id", "type", "name", "absolutePath"],
                      "additionalProperties": false
                    }
                  ]
                },
                "description": "The files and folders deleted"
              }
            },
            "required": ["created", "updated", "deleted"],
            "additionalProperties": false,
            "description": "The modified items"
          }
        },
        "required": ["modifiedItems"],
        "additionalProperties": false
      }
    }
  },
  "actions": {
    "listItemsInFolder": {
      "title": "List items in folder",
      "description": "List the files and folders in a folder",
      "input": {
        "schema": {
          "type": "object",
          "properties": {
            "folderId": {
              "type": "string",
              "description": "The folder ID to list the items from. Leave empty to list items from the root folder."
            },
            "filters": {
              "type": "object",
              "properties": {
                "itemType": {
                  "type": "string",
                  "enum": ["file", "folder"],
                  "description": "Filter the items by type"
                },
                "maxSizeInBytes": {
                  "type": "number",

                  "description": "Filter the items by maximum size (in bytes)"
                },
                "modifiedAfter": {
                  "type": "string",
                  "format": "date-time",

                  "description": "Filter the items modified after the given date"
                }
              },
              "additionalProperties": false,

              "description": "Optional search filters"
            },
            "nextToken": {
              "type": "string",

              "description": "The token to get the next page of items. Leave empty to get the first page."
            }
          },
          "additionalProperties": false
        }
      },
      "output": {
        "schema": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The file's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique."
                      },
                      "type": {
                        "type": "string",
                        "const": "file"
                      },
                      "name": {
                        "type": "string",
                        "description": "The file's name. This will be displayed in the Botpress UI and be used as the file's name on Files API.\""
                      },
                      "parentId": {
                        "type": "string",

                        "description": "The parent folder ID. Leave empty if the file is in the root folder."
                      },
                      "absolutePath": {
                        "type": "string",

                        "description": "The absolute path of the file. Leave empty if not available."
                      },
                      "sizeInBytes": {
                        "type": "number",

                        "description": "The file size in bytes, if available"
                      },
                      "lastModifiedDate": {
                        "type": "string",
                        "format": "date-time",

                        "description": "The last modified date of the file, if available"
                      },
                      "contentHash": {
                        "type": "string",

                        "description": "The hash of the file content, or version/revision number, if available"
                      }
                    },
                    "required": ["id", "type", "name"],
                    "additionalProperties": false,
                    "x-zui": {
                      "title": "File to transfer"
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The folder's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique."
                      },
                      "type": {
                        "type": "string",
                        "const": "folder"
                      },
                      "name": {
                        "type": "string",
                        "description": "The folder's name. This will be displayed in the Botpress UI and be used as the folder's name on Files API.\""
                      },
                      "parentId": {
                        "type": "string",

                        "description": "The parent folder ID. Leave empty if the folder is in the root folder."
                      },
                      "absolutePath": {
                        "type": "string",

                        "description": "The absolute path of the folder. Leave empty if not available."
                      }
                    },
                    "required": ["id", "type", "name"],
                    "additionalProperties": false
                  }
                ]
              },
              "description": "The files and folders in the folder"
            },
            "meta": {
              "type": "object",
              "properties": {
                "nextToken": {
                  "type": "string",

                  "description": "The token to get the next page of items."
                }
              },
              "additionalProperties": false
            }
          },
          "required": ["items", "meta"],
          "additionalProperties": false
        }
      }
    },
    "transferFileToBotpress": {
      "title": "Transfer file to Botpress",
      "description": "Transfer a file from an external service to Botpress",
      "input": {
        "schema": {
          "type": "object",
          "properties": {
            "file": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The file's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique."
                },
                "type": {
                  "type": "string",
                  "const": "file"
                },
                "name": {
                  "type": "string",
                  "description": "The file's name. This will be displayed in the Botpress UI and be used as the file's name on Files API.\""
                },
                "parentId": {
                  "type": "string",

                  "description": "The parent folder ID. Leave empty if the file is in the root folder."
                },
                "absolutePath": {
                  "type": "string",

                  "description": "The absolute path of the file. Leave empty if not available."
                },
                "sizeInBytes": {
                  "type": "number",

                  "description": "The file size in bytes, if available"
                },
                "lastModifiedDate": {
                  "type": "string",
                  "format": "date-time",

                  "description": "The last modified date of the file, if available"
                },
                "contentHash": {
                  "type": "string",

                  "description": "The hash of the file content, or version/revision number, if available"
                }
              },
              "required": ["id", "type", "name"],
              "additionalProperties": false,
              "description": "The file to transfer",
              "x-zui": {
                "title": "File to transfer"
              }
            },
            "fileKey": {
              "type": "string",
              "description": "The file key to use in Botpress",
              "x-zui": {
                "title": "File key"
              }
            }
          },
          "required": ["file", "fileKey"],
          "additionalProperties": false
        }
      },
      "output": {
        "schema": {
          "type": "object",
          "properties": {
            "botpressFileId": {
              "type": "string",
              "description": "The file ID of the uploaded file on Botpress"
            }
          },
          "required": ["botpressFileId"],
          "additionalProperties": false
        }
      }
    }
  },
  "channels": {}
}
