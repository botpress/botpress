{
  "actions": {
    "generateContent": {
      "billable": true,
      "cacheable": true,
      "input": {
        "schema": {
          "additionalProperties": false,
          "properties": {
            "debug": {
              "description": "Set to `true` to output debug information to the bot logs",
              "type": "boolean",
              "x-zui": { "hidden": true }
            },
            "maxTokens": {
              "description": "Maximum number of tokens allowed in the generated response",
              "type": "number"
            },
            "messages": {
              "description": "Array of messages for the model to process",
              "items": {
                "additionalProperties": false,
                "properties": {
                  "content": {
                    "anyOf": [
                      {
                        "anyOf": [
                          { "type": "string" },
                          {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "mimeType": {
                                  "description": "Indicates the MIME type of the content. If not provided it will be detected from the content-type header of the provided URL.",
                                  "type": "string"
                                },
                                "text": { "description": "Required if part type is \"text\" ", "type": "string" },
                                "type": { "enum": ["text", "image"], "type": "string" },
                                "url": { "description": "Required if part type is \"image\"", "type": "string" }
                              },
                              "required": ["type"],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        ]
                      },
                      { "type": "null" }
                    ],
                    "description": "Required unless `type` is \"tool_call\". If `type` is \"multipart\", this field must be an array of content objects. If `type` is \"tool_result\" then this field should be the result of the tool call (a plain string or a JSON-encoded array or object). If `type` is \"tool_call\" then the `toolCalls` field should be used instead."
                  },
                  "role": { "enum": ["user", "assistant"], "type": "string" },
                  "toolCalls": {
                    "description": "Required if `type` is \"tool_calls\"",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "function": {
                          "additionalProperties": false,
                          "properties": {
                            "arguments": {
                              "anyOf": [{ "additionalProperties": {}, "type": "object" }, { "type": "null" }],
                              "description": "Some LLMs may generate invalid JSON for a tool call, so this will be `null` when it happens."
                            },
                            "name": { "type": "string" }
                          },
                          "required": ["name", "arguments"],
                          "type": "object"
                        },
                        "id": { "type": "string" },
                        "type": { "enum": ["function"], "type": "string" }
                      },
                      "required": ["id", "type", "function"],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "toolResultCallId": { "description": "Required if `type` is \"tool_result\"", "type": "string" },
                  "type": {
                    "default": "text",
                    "enum": ["text", "tool_calls", "tool_result", "multipart"],
                    "type": "string"
                  }
                },
                "required": ["role", "content"],
                "type": "object"
              },
              "type": "array"
            },
            "meta": {
              "additionalProperties": false,
              "properties": {
                "integrationName": {
                  "description": "Name of the integration that originally received the message that initiated this action",
                  "type": "string"
                },
                "promptCategory": { "type": "string" },
                "promptSource": {
                  "description": "Source of the prompt, e.g. agent/:id/:version cards/ai-generate, cards/ai-task, nodes/autonomous, etc.",
                  "type": "string"
                }
              },
              "type": "object",
              "x-zui": { "hidden": true }
            },
            "model": { "$ref": "modelRef", "description": "Model to use for content generation" },
            "reasoningEffort": {
              "description": "Reasoning effort level to use for models that support reasoning",
              "enum": ["low", "medium", "high"],
              "type": "string"
            },
            "responseFormat": {
              "description": "Response format expected from the model. If \"json_object\" is chosen, you must instruct the model to generate JSON either via the system prompt or a user message.",
              "enum": ["text", "json_object"],
              "type": "string"
            },
            "stopSequences": {
              "description": "Sequences where the model should stop generating further tokens.",
              "items": { "type": "string" },
              "maxItems": 4,
              "type": "array"
            },
            "systemPrompt": { "description": "Optional system prompt to guide the model", "type": "string" },
            "temperature": {
              "default": 1,
              "description": "Sampling temperature for the model. Higher values result in more random outputs.",
              "maximum": 2,
              "minimum": 0,
              "type": "number",
              "x-zui": { "displayAs": ["slider", { "horizontal": true, "stepSize": 0.01 }] }
            },
            "toolChoice": {
              "additionalProperties": false,
              "properties": {
                "functionName": { "description": "Required if `type` is \"specific\"", "type": "string" },
                "type": { "enum": ["auto", "specific", "any", "none", ""], "type": "string" }
              },
              "type": "object"
            },
            "tools": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "function": {
                    "additionalProperties": false,
                    "properties": {
                      "argumentsSchema": {
                        "additionalProperties": true,
                        "description": "JSON schema of the function arguments",
                        "properties": {},
                        "type": "object"
                      },
                      "description": { "type": "string" },
                      "name": { "description": "Function name", "type": "string" }
                    },
                    "required": ["name"],
                    "type": "object"
                  },
                  "type": { "const": "function", "type": "string" }
                },
                "required": ["type", "function"],
                "type": "object"
              },
              "type": "array"
            },
            "topP": {
              "default": 1,
              "description": "Top-p sampling parameter. Limits sampling to the smallest set of tokens with a cumulative probability above the threshold.",
              "maximum": 1,
              "minimum": 0,
              "type": "number",
              "x-zui": { "displayAs": ["slider", { "horizontal": true, "stepSize": 0.01 }] }
            },
            "userId": { "type": "string" }
          },
          "required": ["messages"],
          "type": "object"
        }
      },
      "output": {
        "schema": {
          "additionalProperties": false,
          "properties": {
            "botpress": {
              "additionalProperties": false,
              "properties": {
                "cost": { "description": "Total cost of the content generation, in U.S. dollars", "type": "number" }
              },
              "required": ["cost"],
              "type": "object"
            },
            "choices": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "content": {
                    "anyOf": [
                      {
                        "anyOf": [
                          { "type": "string" },
                          {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "mimeType": {
                                  "description": "Indicates the MIME type of the content. If not provided it will be detected from the content-type header of the provided URL.",
                                  "type": "string"
                                },
                                "text": { "description": "Required if part type is \"text\" ", "type": "string" },
                                "type": { "enum": ["text", "image"], "type": "string" },
                                "url": { "description": "Required if part type is \"image\"", "type": "string" }
                              },
                              "required": ["type"],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        ]
                      },
                      { "type": "null" }
                    ],
                    "description": "Required unless `type` is \"tool_call\". If `type` is \"multipart\", this field must be an array of content objects. If `type` is \"tool_result\" then this field should be the result of the tool call (a plain string or a JSON-encoded array or object). If `type` is \"tool_call\" then the `toolCalls` field should be used instead."
                  },
                  "index": { "type": "integer" },
                  "role": { "const": "assistant", "type": "string" },
                  "stopReason": {
                    "enum": ["stop", "max_tokens", "tool_calls", "content_filter", "other"],
                    "type": "string"
                  },
                  "toolCalls": {
                    "description": "Required if `type` is \"tool_calls\"",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "function": {
                          "additionalProperties": false,
                          "properties": {
                            "arguments": {
                              "anyOf": [{ "additionalProperties": {}, "type": "object" }, { "type": "null" }],
                              "description": "Some LLMs may generate invalid JSON for a tool call, so this will be `null` when it happens."
                            },
                            "name": { "type": "string" }
                          },
                          "required": ["name", "arguments"],
                          "type": "object"
                        },
                        "id": { "type": "string" },
                        "type": { "enum": ["function"], "type": "string" }
                      },
                      "required": ["id", "type", "function"],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "toolResultCallId": { "description": "Required if `type` is \"tool_result\"", "type": "string" },
                  "type": {
                    "default": "text",
                    "enum": ["text", "tool_calls", "tool_result", "multipart"],
                    "type": "string"
                  }
                },
                "required": ["content", "role", "index", "stopReason"],
                "type": "object"
              },
              "type": "array"
            },
            "id": { "description": "Response ID from LLM provider", "type": "string" },
            "model": { "description": "Model name", "type": "string" },
            "provider": { "description": "LLM provider name", "type": "string" },
            "usage": {
              "additionalProperties": false,
              "properties": {
                "inputCost": {
                  "description": "Cost of the input tokens received by the model, in U.S. dollars",
                  "type": "number"
                },
                "inputTokens": { "description": "Number of input tokens used by the model", "type": "integer" },
                "outputCost": {
                  "description": "Cost of the output tokens generated by the model, in U.S. dollars",
                  "type": "number"
                },
                "outputTokens": { "description": "Number of output tokens used by the model", "type": "integer" }
              },
              "required": ["inputTokens", "inputCost", "outputTokens", "outputCost"],
              "type": "object"
            }
          },
          "required": ["id", "provider", "model", "choices", "usage", "botpress"],
          "type": "object"
        }
      }
    },
    "listLanguageModels": {
      "input": { "schema": { "additionalProperties": false, "properties": {}, "type": "object" } },
      "output": {
        "schema": {
          "additionalProperties": false,
          "properties": {
            "models": {
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "description": { "type": "string" },
                      "id": { "type": "string" },
                      "input": {
                        "additionalProperties": false,
                        "properties": {
                          "costPer1MTokens": {
                            "description": "Cost per 1 million tokens, in U.S. dollars",
                            "type": "number"
                          },
                          "maxTokens": { "type": "integer" }
                        },
                        "required": ["maxTokens", "costPer1MTokens"],
                        "type": "object"
                      },
                      "name": { "type": "string" },
                      "output": {
                        "additionalProperties": false,
                        "properties": {
                          "costPer1MTokens": {
                            "description": "Cost per 1 million tokens, in U.S. dollars",
                            "type": "number"
                          },
                          "maxTokens": { "type": "integer" }
                        },
                        "required": ["maxTokens", "costPer1MTokens"],
                        "type": "object"
                      },
                      "tags": {
                        "items": {
                          "enum": [
                            "recommended",
                            "deprecated",
                            "general-purpose",
                            "low-cost",
                            "vision",
                            "coding",
                            "agents",
                            "function-calling",
                            "roleplay",
                            "storytelling",
                            "reasoning",
                            "preview"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "required": ["id", "name", "description", "tags", "input", "output"],
                    "type": "object"
                  },
                  { "$ref": "modelRef" }
                ]
              },
              "type": "array"
            }
          },
          "required": ["models"],
          "type": "object"
        }
      }
    }
  },
  "channels": {},
  "entities": {
    "modelRef": {
      "schema": {
        "additionalProperties": false,
        "properties": { "id": { "type": "string" } },
        "required": ["id"],
        "type": "object"
      }
    }
  },
  "events": {},
  "name": "llm",
  "version": "8.0.0"
}
