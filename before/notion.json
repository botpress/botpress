{
  "name": "notion",
  "version": "2.2.0",
  "title": "Notion",
  "description": "Add pages and comments, manage databases, and engage in discussions â€” all within your chatbot.",
  "user": {
    "tags": {
      "id": {
        "title": "Notion User ID",
        "description": "The ID of the user on Notion."
      }
    }
  },
  "events": {
    "fileCreated": {
      "schema": {
        "type": "object",
        "properties": {
          "file": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The file's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique.",
                "x-zui": {}
              },
              "type": {
                "type": "string",
                "const": "file",
                "x-zui": {}
              },
              "name": {
                "type": "string",
                "description": "The file's name. This will be displayed in the Botpress UI and be used as the file's name on Files API.\"",
                "x-zui": {}
              },
              "parentId": {
                "type": "string",
                "description": "The parent folder ID. Leave empty if the file is in the root folder.",
                "x-zui": {}
              },
              "absolutePath": {
                "type": "string",
                "description": "The full path of the file",
                "x-zui": {}
              },
              "sizeInBytes": {
                "type": "number",
                "description": "The file size in bytes, if available",
                "x-zui": {}
              },
              "lastModifiedDate": {
                "type": "string",
                "format": "date-time",
                "description": "The last modified date of the file, if available",
                "x-zui": {}
              },
              "contentHash": {
                "type": "string",
                "description": "The hash of the file content, or version/revision number, if available",
                "x-zui": {}
              }
            },
            "required": ["id", "type", "name", "absolutePath"],
            "additionalProperties": false,
            "description": "The created file",
            "x-zui": {}
          }
        },
        "required": ["file"],
        "additionalProperties": false,
        "x-zui": {},
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    "fileUpdated": {
      "schema": {
        "type": "object",
        "properties": {
          "file": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The file's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique.",
                "x-zui": {}
              },
              "type": {
                "type": "string",
                "const": "file",
                "x-zui": {}
              },
              "name": {
                "type": "string",
                "description": "The file's name. This will be displayed in the Botpress UI and be used as the file's name on Files API.\"",
                "x-zui": {}
              },
              "parentId": {
                "type": "string",
                "description": "The parent folder ID. Leave empty if the file is in the root folder.",
                "x-zui": {}
              },
              "absolutePath": {
                "type": "string",
                "description": "The full path of the file",
                "x-zui": {}
              },
              "sizeInBytes": {
                "type": "number",
                "description": "The file size in bytes, if available",
                "x-zui": {}
              },
              "lastModifiedDate": {
                "type": "string",
                "format": "date-time",
                "description": "The last modified date of the file, if available",
                "x-zui": {}
              },
              "contentHash": {
                "type": "string",
                "description": "The hash of the file content, or version/revision number, if available",
                "x-zui": {}
              }
            },
            "required": ["id", "type", "name", "absolutePath"],
            "additionalProperties": false,
            "description": "The updated file",
            "x-zui": {}
          }
        },
        "required": ["file"],
        "additionalProperties": false,
        "x-zui": {},
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    "fileDeleted": {
      "schema": {
        "type": "object",
        "properties": {
          "file": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The file's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique.",
                "x-zui": {}
              },
              "type": {
                "type": "string",
                "const": "file",
                "x-zui": {}
              },
              "name": {
                "type": "string",
                "description": "The file's name. This will be displayed in the Botpress UI and be used as the file's name on Files API.\"",
                "x-zui": {}
              },
              "parentId": {
                "type": "string",
                "description": "The parent folder ID. Leave empty if the file is in the root folder.",
                "x-zui": {}
              },
              "absolutePath": {
                "type": "string",
                "description": "The full path of the file",
                "x-zui": {}
              },
              "sizeInBytes": {
                "type": "number",
                "description": "The file size in bytes, if available",
                "x-zui": {}
              },
              "lastModifiedDate": {
                "type": "string",
                "format": "date-time",
                "description": "The last modified date of the file, if available",
                "x-zui": {}
              },
              "contentHash": {
                "type": "string",
                "description": "The hash of the file content, or version/revision number, if available",
                "x-zui": {}
              }
            },
            "required": ["id", "type", "name", "absolutePath"],
            "additionalProperties": false,
            "description": "The deleted file",
            "x-zui": {}
          }
        },
        "required": ["file"],
        "additionalProperties": false,
        "x-zui": {},
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    "folderDeletedRecursive": {
      "schema": {
        "type": "object",
        "properties": {
          "folder": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The folder's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique.",
                "x-zui": {}
              },
              "type": {
                "type": "string",
                "const": "folder",
                "x-zui": {}
              },
              "name": {
                "type": "string",
                "description": "The folder's name. This will be displayed in the Botpress UI and be used as the folder's name on Files API.\"",
                "x-zui": {}
              },
              "parentId": {
                "type": "string",
                "description": "The parent folder ID. Leave empty if the folder is in the root folder.",
                "x-zui": {}
              },
              "absolutePath": {
                "type": "string",
                "description": "The full path of the folder",
                "x-zui": {}
              }
            },
            "required": ["id", "type", "name", "absolutePath"],
            "additionalProperties": false,
            "description": "The deleted folder",
            "x-zui": {}
          }
        },
        "required": ["folder"],
        "additionalProperties": false,
        "x-zui": {},
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    "aggregateFileChanges": {
      "schema": {
        "type": "object",
        "properties": {
          "modifiedItems": {
            "type": "object",
            "properties": {
              "created": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The file's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique.",
                      "x-zui": {}
                    },
                    "type": {
                      "type": "string",
                      "const": "file",
                      "x-zui": {}
                    },
                    "name": {
                      "type": "string",
                      "description": "The file's name. This will be displayed in the Botpress UI and be used as the file's name on Files API.\"",
                      "x-zui": {}
                    },
                    "parentId": {
                      "type": "string",
                      "description": "The parent folder ID. Leave empty if the file is in the root folder.",
                      "x-zui": {}
                    },
                    "absolutePath": {
                      "type": "string",
                      "description": "The full path of the file",
                      "x-zui": {}
                    },
                    "sizeInBytes": {
                      "type": "number",
                      "description": "The file size in bytes, if available",
                      "x-zui": {}
                    },
                    "lastModifiedDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The last modified date of the file, if available",
                      "x-zui": {}
                    },
                    "contentHash": {
                      "type": "string",
                      "description": "The hash of the file content, or version/revision number, if available",
                      "x-zui": {}
                    }
                  },
                  "required": ["id", "type", "name", "absolutePath"],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "description": "The files created",
                "x-zui": {}
              },
              "updated": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The file's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique.",
                      "x-zui": {}
                    },
                    "type": {
                      "type": "string",
                      "const": "file",
                      "x-zui": {}
                    },
                    "name": {
                      "type": "string",
                      "description": "The file's name. This will be displayed in the Botpress UI and be used as the file's name on Files API.\"",
                      "x-zui": {}
                    },
                    "parentId": {
                      "type": "string",
                      "description": "The parent folder ID. Leave empty if the file is in the root folder.",
                      "x-zui": {}
                    },
                    "absolutePath": {
                      "type": "string",
                      "description": "The full path of the file",
                      "x-zui": {}
                    },
                    "sizeInBytes": {
                      "type": "number",
                      "description": "The file size in bytes, if available",
                      "x-zui": {}
                    },
                    "lastModifiedDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The last modified date of the file, if available",
                      "x-zui": {}
                    },
                    "contentHash": {
                      "type": "string",
                      "description": "The hash of the file content, or version/revision number, if available",
                      "x-zui": {}
                    }
                  },
                  "required": ["id", "type", "name", "absolutePath"],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "description": "The files updated",
                "x-zui": {}
              },
              "deleted": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The file's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique.",
                          "x-zui": {}
                        },
                        "type": {
                          "type": "string",
                          "const": "file",
                          "x-zui": {}
                        },
                        "name": {
                          "type": "string",
                          "description": "The file's name. This will be displayed in the Botpress UI and be used as the file's name on Files API.\"",
                          "x-zui": {}
                        },
                        "parentId": {
                          "type": "string",
                          "description": "The parent folder ID. Leave empty if the file is in the root folder.",
                          "x-zui": {}
                        },
                        "absolutePath": {
                          "type": "string",
                          "description": "The full path of the file",
                          "x-zui": {}
                        },
                        "sizeInBytes": {
                          "type": "number",
                          "description": "The file size in bytes, if available",
                          "x-zui": {}
                        },
                        "lastModifiedDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The last modified date of the file, if available",
                          "x-zui": {}
                        },
                        "contentHash": {
                          "type": "string",
                          "description": "The hash of the file content, or version/revision number, if available",
                          "x-zui": {}
                        }
                      },
                      "required": ["id", "type", "name", "absolutePath"],
                      "additionalProperties": false,
                      "x-zui": {}
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The folder's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique.",
                          "x-zui": {}
                        },
                        "type": {
                          "type": "string",
                          "const": "folder",
                          "x-zui": {}
                        },
                        "name": {
                          "type": "string",
                          "description": "The folder's name. This will be displayed in the Botpress UI and be used as the folder's name on Files API.\"",
                          "x-zui": {}
                        },
                        "parentId": {
                          "type": "string",
                          "description": "The parent folder ID. Leave empty if the folder is in the root folder.",
                          "x-zui": {}
                        },
                        "absolutePath": {
                          "type": "string",
                          "description": "The full path of the folder",
                          "x-zui": {}
                        }
                      },
                      "required": ["id", "type", "name", "absolutePath"],
                      "additionalProperties": false,
                      "x-zui": {}
                    }
                  ],
                  "x-zui": {}
                },
                "description": "The files and folders deleted",
                "x-zui": {}
              }
            },
            "required": ["created", "updated", "deleted"],
            "additionalProperties": false,
            "description": "The modified items",
            "x-zui": {}
          }
        },
        "required": ["modifiedItems"],
        "additionalProperties": false,
        "x-zui": {},
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    }
  },
  "actions": {
    "addPageToDb": {
      "title": "Create Page in Database",
      "description": "Add a new page to a database in Notion",
      "input": {
        "schema": {
          "type": "object",
          "properties": {
            "databaseId": {
              "type": "string",
              "minLength": 1,
              "description": "The ID of the database to add the page to. Can be found in the URL of the database",
              "x-zui": {
                "title": "Database ID"
              }
            },
            "pageProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {},
                "additionalProperties": true,
                "x-zui": {}
              },
              "description": "The values of the page's properties. Must match the parent database's properties",
              "x-zui": {
                "title": "Page Properties"
              }
            }
          },
          "required": ["databaseId", "pageProperties"],
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "output": {
        "schema": {
          "type": "object",
          "properties": {},
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    "addCommentToPage": {
      "title": "Add Comment to Page",
      "description": "Add a comment to a page in Notion",
      "input": {
        "schema": {
          "type": "object",
          "properties": {
            "pageId": {
              "type": "string",
              "minLength": 1,
              "description": "The ID of the page to add the comment to. Can be found in the URL of the page",
              "x-zui": {
                "title": "Page ID"
              }
            },
            "commentBody": {
              "type": "string",
              "minLength": 1,
              "description": "Must be plain text",
              "x-zui": {
                "title": "Comment Body"
              }
            }
          },
          "required": ["pageId", "commentBody"],
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "output": {
        "schema": {
          "type": "object",
          "properties": {},
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    "deleteBlock": {
      "title": "Delete Block",
      "description": "Delete a block in Notion",
      "input": {
        "schema": {
          "type": "object",
          "properties": {
            "blockId": {
              "type": "string",
              "minLength": 1,
              "description": "The ID of the block to delete. Can be found in the URL of the block",
              "x-zui": {
                "title": "Block ID"
              }
            }
          },
          "required": ["blockId"],
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "output": {
        "schema": {
          "type": "object",
          "properties": {},
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    "getDb": {
      "title": "Get Database",
      "description": "Get a database from Notion",
      "input": {
        "schema": {
          "type": "object",
          "properties": {
            "databaseId": {
              "type": "string",
              "minLength": 1,
              "description": "The ID of the database to fetch. Can be found in the URL of the database",
              "x-zui": {
                "title": "Database ID"
              }
            }
          },
          "required": ["databaseId"],
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "output": {
        "schema": {
          "type": "object",
          "properties": {
            "object": {
              "type": "string",
              "description": "A stringified representation of the database",
              "x-zui": {
                "title": "Database Object"
              }
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {},
                "additionalProperties": true,
                "x-zui": {}
              },
              "description": "Schema of properties for the database as they appear in Notion",
              "x-zui": {
                "title": "Database Properties"
              }
            },
            "structure": {
              "type": "string",
              "description": "A stringified representation of the database structure",
              "x-zui": {
                "title": "Database Structure"
              }
            }
          },
          "required": ["object", "properties", "structure"],
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    "addCommentToDiscussion": {
      "title": "Add Comment to Discussion",
      "description": "Add a comment to a discussion in Notion",
      "input": {
        "schema": {
          "type": "object",
          "properties": {
            "discussionId": {
              "type": "string",
              "minLength": 1,
              "description": "The ID of the discussion to add the comment to. Can be found in the URL of the discussion",
              "x-zui": {
                "title": "Discussion ID"
              }
            },
            "commentBody": {
              "type": "string",
              "minLength": 1,
              "description": "Must be plain text",
              "x-zui": {
                "title": "Comment Body"
              }
            }
          },
          "required": ["discussionId", "commentBody"],
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "output": {
        "schema": {
          "type": "object",
          "properties": {},
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    "filesReadonlyListItemsInFolder": {
      "input": {
        "schema": {
          "type": "object",
          "properties": {
            "folderId": {
              "type": "string",
              "description": "The folder's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique.",
              "x-zui": {}
            },
            "filters": {
              "type": "object",
              "properties": {
                "itemType": {
                  "type": "string",
                  "enum": ["file", "folder"],
                  "description": "The entity type",
                  "x-zui": {}
                },
                "maxSizeInBytes": {
                  "type": "number",
                  "description": "Filter the items by maximum size (in bytes)",
                  "x-zui": {}
                },
                "modifiedAfter": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Filter the items modified after the given date",
                  "x-zui": {}
                }
              },
              "additionalProperties": false,
              "description": "Optional search filters",
              "x-zui": {}
            },
            "nextToken": {
              "type": "string",
              "description": "The token to get the next page of items. Leave empty to get the first page.",
              "x-zui": {}
            }
          },
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "output": {
        "schema": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The file's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique.",
                        "x-zui": {}
                      },
                      "type": {
                        "type": "string",
                        "const": "file",
                        "x-zui": {}
                      },
                      "name": {
                        "type": "string",
                        "description": "The file's name. This will be displayed in the Botpress UI and be used as the file's name on Files API.\"",
                        "x-zui": {}
                      },
                      "parentId": {
                        "type": "string",
                        "description": "The parent folder ID. Leave empty if the file is in the root folder.",
                        "x-zui": {}
                      },
                      "absolutePath": {
                        "type": "string",
                        "description": "The absolute path of the file. Leave empty if not available.",
                        "x-zui": {}
                      },
                      "sizeInBytes": {
                        "type": "number",
                        "description": "The file size in bytes, if available",
                        "x-zui": {}
                      },
                      "lastModifiedDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The last modified date of the file, if available",
                        "x-zui": {}
                      },
                      "contentHash": {
                        "type": "string",
                        "description": "The hash of the file content, or version/revision number, if available",
                        "x-zui": {}
                      }
                    },
                    "required": ["id", "type", "name"],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The folder's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique.",
                        "x-zui": {}
                      },
                      "type": {
                        "type": "string",
                        "const": "folder",
                        "x-zui": {}
                      },
                      "name": {
                        "type": "string",
                        "description": "The folder's name. This will be displayed in the Botpress UI and be used as the folder's name on Files API.\"",
                        "x-zui": {}
                      },
                      "parentId": {
                        "type": "string",
                        "description": "The parent folder ID. Leave empty if the folder is in the root folder.",
                        "x-zui": {}
                      },
                      "absolutePath": {
                        "type": "string",
                        "description": "The absolute path of the folder. Leave empty if not available.",
                        "x-zui": {}
                      }
                    },
                    "required": ["id", "type", "name"],
                    "additionalProperties": false,
                    "x-zui": {}
                  }
                ],
                "x-zui": {}
              },
              "description": "The files and folders in the folder",
              "x-zui": {}
            },
            "meta": {
              "type": "object",
              "properties": {
                "nextToken": {
                  "type": "string",
                  "description": "The token to get the next page of items.",
                  "x-zui": {}
                }
              },
              "additionalProperties": false,
              "x-zui": {}
            }
          },
          "required": ["items", "meta"],
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "title": "List items in folder",
      "description": "List the files and folders in a folder",
      "attributes": {
        "bpActionHiddenInStudio": "true"
      },
      "name": "filesReadonlyListItemsInFolder"
    },
    "filesReadonlyTransferFileToBotpress": {
      "input": {
        "schema": {
          "type": "object",
          "properties": {
            "file": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The file's ID. This could be a unique identifier from the external service, or a relative or absolute path, so long as it's unique.",
                  "x-zui": {}
                },
                "type": {
                  "type": "string",
                  "const": "file",
                  "x-zui": {}
                },
                "name": {
                  "type": "string",
                  "description": "The file's name. This will be displayed in the Botpress UI and be used as the file's name on Files API.\"",
                  "x-zui": {}
                },
                "parentId": {
                  "type": "string",
                  "description": "The parent folder ID. Leave empty if the file is in the root folder.",
                  "x-zui": {}
                },
                "absolutePath": {
                  "type": "string",
                  "description": "The absolute path of the file. Leave empty if not available.",
                  "x-zui": {}
                },
                "sizeInBytes": {
                  "type": "number",
                  "description": "The file size in bytes, if available",
                  "x-zui": {}
                },
                "lastModifiedDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The last modified date of the file, if available",
                  "x-zui": {}
                },
                "contentHash": {
                  "type": "string",
                  "description": "The hash of the file content, or version/revision number, if available",
                  "x-zui": {}
                }
              },
              "required": ["id", "type", "name"],
              "additionalProperties": false,
              "description": "The file to transfer",
              "x-zui": {
                "title": "File to transfer"
              }
            },
            "fileKey": {
              "type": "string",
              "description": "The file key to use in Botpress",
              "x-zui": {
                "title": "File key"
              }
            },
            "shouldIndex": {
              "type": "boolean",
              "description": "Whether to index the file in vector storage",
              "x-zui": {
                "title": "Should index file?"
              }
            }
          },
          "required": ["file", "fileKey"],
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "output": {
        "schema": {
          "type": "object",
          "properties": {
            "botpressFileId": {
              "type": "string",
              "description": "The file ID of the uploaded file on Botpress",
              "x-zui": {}
            }
          },
          "required": ["botpressFileId"],
          "additionalProperties": false,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "title": "Transfer file to Botpress",
      "description": "Transfer a file from an external service to Botpress",
      "attributes": {
        "bpActionHiddenInStudio": "true"
      },
      "name": "filesReadonlyTransferFileToBotpress"
    }
  },
  "channels": {},
  "states": {
    "oauth": {
      "type": "integration",
      "schema": {
        "type": "object",
        "properties": {
          "authToken": {
            "type": "string",
            "description": "The token used to authenticate with Notion. Currently, these tokens never expire",
            "x-zui": {
              "title": "OAuth Authentication Token"
            }
          }
        },
        "required": ["authToken"],
        "additionalProperties": false,
        "x-zui": {},
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    }
  },
  "interfaces": {
    "files-readonly": {
      "id": "",
      "name": "files-readonly",
      "version": "0.3.0",
      "entities": {},
      "actions": {
        "listItemsInFolder": {
          "name": "filesReadonlyListItemsInFolder"
        },
        "transferFileToBotpress": {
          "name": "filesReadonlyTransferFileToBotpress"
        }
      },
      "events": {
        "fileCreated": {
          "name": "fileCreated"
        },
        "fileUpdated": {
          "name": "fileUpdated"
        },
        "fileDeleted": {
          "name": "fileDeleted"
        },
        "folderDeletedRecursive": {
          "name": "folderDeletedRecursive"
        },
        "aggregateFileChanges": {
          "name": "aggregateFileChanges"
        }
      },
      "channels": {}
    }
  }
}
